image: node:20.12.2

definitions:
  caches:
    sonar: ~/.sonar

  services:
    docker:
      memory: 2048
      type: docker

  steps:
    - step: &setup
        name: "‚öôÔ∏è Setup Project"
        image: node:20.12.2
        caches:
          - node
        script:
          - apt-get update && apt-get install -y python3-pip
          - rm -rf /usr/lib/python3.11/EXTERNALLY-MANAGED
          - pip3 install rsa awscli
          - echo "üì¶ Configurando AWS CLI"
          - aws configure set aws_access_key_id "${AWS_ACCESS_KEY_ID}"
          - aws configure set aws_secret_access_key "${AWS_SECRET_ACCESS_KEY}"
          - aws configure set region "us-west-2"
          - aws codeartifact login --tool npm --repository bankeiro-backend --domain bankeiro --domain-owner 367063506873 --region us-west-2
          - echo "üîê AWS CLI configurado"
          - npm run co:login
          - npm ci
          - npm run build
          - cp package.json ./dist/package.json
        artifacts:
          - node_modules/**
          - dist/**
          - coverage/**

    - step: &test-code
        name: "üß™ Test Code"
        image: node:20.12.2
        caches:
          - node
        script:
          - npm run test:coverage
        artifacts:
          - coverage/**

    - step: &lint-code
        name: "üíÑ Lint Code"
        image: node:20.12.2
        caches:
          - node
        script:
          - npm run lint

    - step: &qualify-code
        name: "üîç Qualify Code (SonarQube)"
        size: 2x
        image: node:20.12.2
        caches:
          - node
          - sonar
        script:
          - pipe: sonarsource/sonarqube-scan:1.2.0
            variables:
              SONAR_HOST_URL: ${SONAR_HOST_URL}
              SONAR_TOKEN: ${SONAR_TOKEN}
          - pipe: sonarsource/sonarqube-quality-gate:1.1.0
            variables:
              SONAR_TOKEN: ${SONAR_TOKEN}

    - step: &security-analysis
        name: "üîê Security Scanning"
        size: 2x
        script:
          - pipe: atlassian/git-secrets-scan:1.2.1

    - step: &publish-prod
        name: 'üöÄ Publish to PROD'
        image: node:20.12.2
        caches:
          - node
        script:
          - apt-get update && apt-get install -y python3-pip
          - rm -rf /usr/lib/python3.11/EXTERNALLY-MANAGED
          - pip3 install rsa awscli
          - aws configure set aws_access_key_id "${AWS_ACCESS_KEY_ID}"
          - aws configure set aws_secret_access_key "${AWS_SECRET_ACCESS_KEY}"
          - aws configure set region "us-west-2"
          - aws codeartifact login --tool npm --repository bankeiro-backend --domain bankeiro --domain-owner 367063506873 --region us-west-2
          - cd dist
          - npm publish

pipelines:
  pull-requests:
    "**":
      - step: *setup
      - parallel:
          - step: *test-code
          - step: *lint-code
          - step: *qualify-code
          - step: *security-analysis

  branches:
    develop:
      - step: *setup
      - parallel:
          - step: *test-code
          - step: *lint-code
          - step: *qualify-code
          - step: *security-analysis

    master:
      - step: *setup
      - parallel:
          - step: *test-code
          - step: *lint-code
          - step: *qualify-code
          - step: *security-analysis
      - step: *publish-prod
